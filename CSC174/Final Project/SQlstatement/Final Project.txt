/*Creating Table*/ 
	/*Drop tables if exist*/
		DROP TABLE IF EXISTS `ACCOUNT`;
		DROP TABLE IF EXISTS `USER`;
		DROP TABLE IF EXISTS `CURATOR`;
		DROP TABLE IF EXISTS `ITEMS`;
		DROP TABLE IF EXISTS `ACCESS_ITEMS`;
		DROP TABLE IF EXISTS `MAINTAIN_ITEMS`;
		DROP TABLE IF EXISTS `AUTHOR`;
		
	/*CREATE ACCOUNT TABLE*/

	CREATE TABLE ACCOUNT(
    	ID INT NOT NULL,
    	LNAME VARCHAR(10) NOT NULL,
    	FNAME VARCHAR(10) NOT NULL,
    	PRIMARY KEY (ID)
	);
	/*CREATE USER TABLE*/

	CREATE TABLE USER(
    	USER_ID INT NOT NULL,
    	PRIMARY KEY (USER_ID),
	FOREIGN KEY (USER_ID) REFERENCES ACCOUNT(ID) ON DELETE CASCADE ON UPDATE CASCADE 
	);

	/*CREATE TABLE CURATOR*/

	CREATE TABLE CURATOR(
    	CURATOR_ID INT NOT NULL,
    	PRIMARY KEY (CURATOR_ID),
	FOREIGN KEY (CURATOR_ID) REFERENCES ACCOUNT(ID) ON DELETE CASCADE ON UPDATE CASCADE 
	);
	
	/*CREATE ITEMS TABLE*/

	CREATE TABLE ITEMS(
    	ISBN INT NOT NULL,
	PUBLISH_DATE DATE NOT NULL,
	TITTLE VARCHAR(100) NOT NULL,
	PUBLISHER VARCHAR(100),
	EDITION VARCHAR(10),
	FIELD VARCHAR(30),
	JOURNAL VARCHAR(100),
	ISSUE_NUMBER INT,
	TYPE ENUM('BOOK','ACADEMIC_JOURNAL','MAGAZINE'),
    	PRIMARY KEY (ISBN)
	);
	/*CREATE TABLE AUTHOR*/

	CREATE TABLE AUTHOR(
	ISBN INT NOT NULL,
	AUTHOR VARCHAR(100) NOT NULL,
	PRIMARY KEY (ISBN, AUTHOR),
	FOREIGN KEY (ISBN) REFERENCES ITEMS(ISBN) ON DELETE CASCADE ON UPDATE CASCADE
	);
	
	/*CREATE TABLE MAINTAIN_ITEMS*/

	CREATE TABLE MAINTAIN_ITEMS(
    	ISBN INT NOT NULL,
	CURATOR_ID INT NOT NULL,
	LAST_UPDATE DATE NOT NULL,
	PRIMARY KEY (CURATOR_ID,ISBN, LAST_UPDATE),
	FOREIGN KEY (CURATOR_ID) REFERENCES CURATOR(CURATOR_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (ISBN) REFERENCES ITEMS(ISBN) ON DELETE CASCADE ON UPDATE CASCADE
	);

	/*CREATE TABLE ACCESS_ITEMS*/

	CREATE TABLE ACCESS_ITEMS(
    	ISBN INT NOT NULL,
	USER_ID INT NOT NULL,
	LAST_ACCESS DATE NOT NULL,
	PRIMARY KEY (USER_ID,ISBN, LAST_ACCESS),
	FOREIGN KEY (USER_ID) REFERENCES  USER(USER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (ISBN) REFERENCES ITEMS(ISBN) ON DELETE CASCADE ON UPDATE CASCADE
	);
/*Triggers */